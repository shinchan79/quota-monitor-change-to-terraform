{
  "Description": "(SO0005-NoOU) - quota-monitor-for-aws - Hub Template, use it when you are not using AWS Organizations. Version v6.3.0",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "VpcId",
            "SubnetIds"
          ]
        },
        {
          "Label": {
            "default": "Notification Configuration"
          },
          "Parameters": [
            "SNSEmail"
          ]
        }
      ],
      "ParameterLabels": {
        "SNSEmail": {
          "default": "Email address for notifications"
        },
        "VpcId": {
          "default": "VPC ID for Lambda functions"
        },
        "SubnetIds": {
          "default": "Subnet IDs for Lambda functions"
        }
      }
    }
  },
  "Parameters": {
    "SNSEmail": {
      "Type": "String",
      "Default": "",
      "Description": "To disable email notifications, leave this blank."
    },
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "VPC ID where Lambda functions will be deployed"
    },
    "SubnetIds": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "List of subnet IDs where Lambda functions will be deployed"
    }
  },
  "Mappings": {
    "QuotaMonitorMap": {
      "Metrics": {
        "SendAnonymizedData": "Yes",
        "MetricsEndpoint": "https://metrics.awssolutionsbuilder.com/generic"
      },
      "SSMParameters": {
        "Accounts": "/QuotaMonitor/Accounts",
        "NotificationMutingConfig": "/QuotaMonitor/NotificationConfiguration"
      }
    }
  },
  "Conditions": {
    "EmailTrueCondition": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "SNSEmail"
            },
            ""
          ]
        }
      ]
    }
  },
  "Resources": {
    "QMBusFF5C6C0C": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "QuotaMonitorBus"
      }
    },
    "KMSHubQMEncryptionKeyA80F8C05": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "Description": "CMK for AWS resources provisioned by Quota Monitor in this account",
        "EnableKeyRotation": true,
        "Enabled": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    }
        "KMSHubQMEncryptionKeyAlias6C248240": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/CMK-KMS-Hub",
        "TargetKeyId": {
          "Fn::GetAtt": ["KMSHubQMEncryptionKeyA80F8C05", "Arn"]
        }
      }
    },
    "QMLambdaSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for Quota Monitor Lambda functions",
        "VpcId": { "Ref": "VpcId" },
        "SecurityGroupEgress": [
          {
            "Description": "Allow all outbound traffic",
            "IpProtocol": "-1",
            "FromPort": -1,
            "ToPort": -1,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "QMAccounts3D743F6B": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Description": "List of target Accounts",
        "Name": {
          "Fn::FindInMap": ["QuotaMonitorMap", "SSMParameters", "Accounts"]
        },
        "Type": "StringList",
        "Value": "NOP"
      }
    },
    "QMNotificationMutingConfig3B7948BA": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Description": "Muting configuration for services, limits",
        "Name": {
          "Fn::FindInMap": ["QuotaMonitorMap", "SSMParameters", "NotificationMutingConfig"]
        },
        "Type": "StringList",
        "Value": "NOP"
      }
    },
    "QMUtilsLayerQMUtilsLayerLayer80D5D993": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": ["nodejs18.x"],
        "Content": {
          "S3Bucket": { "Fn::Sub": "solutions-${AWS::Region}" },
          "S3Key": "quota-monitor-for-aws/v6.3.0/assete8b91b89616aa81e100a9f9ce53981ad5df4ba7439cebca83d5dc68349ed3703.zip"
        },
        "LayerName": "QM-UtilsLayer"
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": ["KMSHubQMEncryptionKeyA80F8C05", "Arn"]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "QMSNSPublisherFunctionDeadLetterQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": ["KMSHubQMEncryptionKeyA80F8C05", "Arn"]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": ["", [
              "arn:",
              {"Ref": "AWS::Partition"},
              ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            ]]
          },
          {
            "Fn::Join": ["", [
              "arn:",
              {"Ref": "AWS::Partition"},
              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
            ]]
          }
        ]
      }
    },
    "QMSNSPublisherFunctionServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": ["", [
              "arn:",
              {"Ref": "AWS::Partition"},
              ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            ]]
          },
          {
            "Fn::Join": ["", [
              "arn:",
              {"Ref": "AWS::Partition"},
              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
            ]]
          }
        ]
      }
    },
        "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": ["QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2", "Arn"]
              }
            },
            {
              "Action": ["kms:Encrypt", "kms:Decrypt", "kms:CreateGrant"],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": ["KMSHubQMEncryptionKeyA80F8C05", "Arn"]
              }
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": ["events:PutPermission", "events:RemovePermission"],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "events:DescribeEventBus",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": ["QMBusFF5C6C0C", "Arn"]
              }
            },
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": ["", [
                  "arn:",
                  {"Ref": "AWS::Partition"},
                  ":ssm:",
                  {"Ref": "AWS::Region"},
                  ":",
                  {"Ref": "AWS::AccountId"},
                  ":parameter",
                  {"Ref": "QMAccounts3D743F6B"}
                ]]
              }
            },
            {
              "Action": "support:DescribeTrustedAdvisorChecks",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777",
        "Roles": [{"Ref": "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72"}]
      }
    },
    "QMSNSPublisherFunctionServiceRoleDefaultPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": ["QMSNSPublisherFunctionDeadLetterQueue", "Arn"]
              }
            },
            {
              "Action": ["kms:Encrypt", "kms:Decrypt", "kms:CreateGrant"],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": ["KMSHubQMEncryptionKeyA80F8C05", "Arn"]
              }
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
              }
            },
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": ["", [
                  "arn:",
                  {"Ref": "AWS::Partition"},
                  ":ssm:",
                  {"Ref": "AWS::Region"},
                  ":",
                  {"Ref": "AWS::AccountId"},
                  ":parameter",
                  {"Ref": "QMNotificationMutingConfig3B7948BA"}
                ]]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMSNSPublisherFunctionServiceRoleDefaultPolicy",
        "Roles": [{"Ref": "QMSNSPublisherFunctionServiceRole"}]
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {"Fn::Sub": "solutions-${AWS::Region}"},
          "S3Key": "quota-monitor-for-aws/v6.3.0/asset6a1cf55956fc481a1f22a54b0fa78a3d78b7e61cd41e12bf80ac8c9404ff9eb2.zip"
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": ["QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2", "Arn"]
          }
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-Deployment-Manager-Lambda",
        "Environment": {
          "Variables": {
            "EVENT_BUS_NAME": {"Ref": "QMBusFF5C6C0C"},
            "EVENT_BUS_ARN": {"Fn::GetAtt": ["QMBusFF5C6C0C", "Arn"]},
            "QM_ACCOUNT_PARAMETER": {"Ref": "QMAccounts3D743F6B"},
            "DEPLOYMENT_MODEL": "Accounts",
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.3.0",
            "VERSION": "v6.3.0",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "KmsKeyArn": {"Fn::GetAtt": ["KMSHubQMEncryptionKeyA80F8C05", "Arn"]},
        "Layers": [{"Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"}],
        "MemorySize": 512,
        "Role": {"Fn::GetAtt": ["QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72", "Arn"]},
        "Runtime": "nodejs18.x",
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [{"Fn::GetAtt": ["QMLambdaSecurityGroup", "GroupId"]}],
          "SubnetIds": {"Ref": "SubnetIds"}
        }
      },
      "DependsOn": [
        "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777",
        "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72"
      ]
    },
    "QMSNSPublisherFunctionLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {"Fn::Sub": "solutions-${AWS::Region}"},
          "S3Key": "quota-monitor-for-aws/v6.3.0/asset-sns-publisher.zip"
        },
        "DeadLetterConfig": {
          "TargetArn": {"Fn::GetAtt": ["QMSNSPublisherFunctionDeadLetterQueue", "Arn"]}
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-SNS-Publisher-Lambda",
        "Environment": {
          "Variables": {
            "SNS_TOPIC_ARN": {"Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"},
            "QM_NOTIFICATION_MUTING_CONFIG": {"Ref": "QMNotificationMutingConfig3B7948BA"},
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.3.0",
            "VERSION": "v6.3.0",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "KmsKeyArn": {"Fn::GetAtt": ["KMSHubQMEncryptionKeyA80F8C05", "Arn"]},
        "Layers": [{"Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"}],
        "MemorySize": 512,
        "Role": {"Fn::GetAtt": ["QMSNSPublisherFunctionServiceRole", "Arn"]},
        "Runtime": "nodejs18.x",
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [{"Fn::GetAtt": ["QMLambdaSecurityGroup", "GroupId"]}],
          "SubnetIds": {"Ref": "SubnetIds"}
        }
      },
      "DependsOn": [
        "QMSNSPublisherFunctionServiceRoleDefaultPolicy",
        "QMSNSPublisherFunctionServiceRole"
      ]
    },
    "QMDeploymentManagerQMDeploymentManagerEventsRule53DB2DA9": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-Deployment-Manager-EventsRule",
        "EventPattern": {
          "detail-type": ["Parameter Store Change"],
          "source": ["aws.ssm"],
          "resources": [{
            "Fn::Join": ["", [
              "arn:",
              {"Ref": "AWS::Partition"},
              ":ssm:",
              {"Ref": "AWS::Region"},
              ":",
              {"Ref": "AWS::AccountId"},
              ":parameter",
              {"Ref": "QMAccounts3D743F6B"}
            ]]
          }]
        },
        "State": "ENABLED",
        "Targets": [{
          "Arn": {"Fn::GetAtt": ["QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21", "Arn"]},
          "Id": "Target0"
        }]
      }
    },
    "QMSNSPublisherFunctionEventsRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "Rule to trigger SNS notifications for quota alerts",
        "EventBus": {"Ref": "QMBusFF5C6C0C"},
        "EventPattern": {
          "source": ["aws.trustedadvisor", "aws-solutions.quota-monitor"],
          "detail-type": ["Trusted Advisor Check Item Refresh Notification", "Service Quotas Utilization Notification"]
        },
        "State": "ENABLED",
        "Targets": [{
          "Arn": {"Fn::GetAtt": ["QMSNSPublisherFunctionLambda", "Arn"]},
          "Id": "SNSPublisher"
        }]
      }
    },
    "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": ["KMSHubQMEncryptionKeyA80F8C05", "Arn"]
        }
      }
    },
    "QMEmailSubscription32E71F90": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": {"Ref": "SNSEmail"},
        "Protocol": "email",
        "TopicArn": {"Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"}
      },
      "Condition": "EmailTrueCondition"
    },
    "QMTable336670B0": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "MessageId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "TimeStamp",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "MessageId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "TimeStamp",
            "KeyType": "RANGE"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "SSESpecification": {
          "KMSMasterKeyId": {"Fn::GetAtt": ["KMSHubQMEncryptionKeyA80F8C05", "Arn"]},
          "SSEEnabled": true,
          "SSEType": "KMS"
        },
        "TimeToLiveSpecification": {
          "AttributeName": "ExpiryTime",
          "Enabled": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    }
  },
  "Outputs": {
    "EventBus": {
      "Description": "Event Bus Arn in hub",
      "Value": {
        "Fn::GetAtt": ["QMBusFF5C6C0C", "Arn"]
      }
    },
    "SNSTopic": {
      "Description": "The SNS Topic where notifications are published to",
      "Value": {
        "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
      }
    }
  }
}