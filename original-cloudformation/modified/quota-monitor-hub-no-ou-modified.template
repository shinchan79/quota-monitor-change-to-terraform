{
  "Description": "(SO0005-NoOU) - quota-monitor-for-aws - Hub Template, use it when you are not using AWS Organizations. Version v6.3.0",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Notification Configuration"
          },
          "Parameters": [
            "SNSEmail"
          ]
        }
      ],
      "ParameterLabels": {
        "SNSEmail": {
          "default": "Email address for notifications"
        }
      }
    }
  },
  "Parameters": {
    "SNSEmail": {
      "Type": "String",
      "Default": "",
      "Description": "To disable email notifications, leave this blank."
    },
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "The ID of the VPC where the Lambda functions will be deployed."
    },
    "SubnetIds": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "The list of subnet IDs in the VPC where the Lambda functions will be deployed."
    },
    "SecurityGroupIds": {
      "Type": "List<AWS::EC2::SecurityGroup::Id>",
      "Description": "The list of security group IDs to associate with the Lambda functions."
    }
  },
  "Mappings": {
    "QuotaMonitorMap": {
      "Metrics": {
        "SendAnonymizedData": "Yes",
        "MetricsEndpoint": "https://metrics.awssolutionsbuilder.com/generic"
      },
      "SSMParameters": {
        "Accounts": "/QuotaMonitor/Accounts",
        "NotificationMutingConfig": "/QuotaMonitor/NotificationConfiguration"
      }
    }
  },
  "Conditions": {
    "EmailTrueCondition": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "SNSEmail"
            },
            ""
          ]
        }
      ]
    }
  },
  "Resources": {
    "QMBusFF5C6C0C": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "QuotaMonitorBus"
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Bus/Resource"
      }
    },
    "KMSHubQMEncryptionKeyA80F8C05": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "Description": "CMK for AWS resources provisioned by Quota Monitor in this account",
        "EnableKeyRotation": true,
        "Enabled": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/KMS-Hub/QM-EncryptionKey/Resource"
      }
    },
    "KMSHubQMEncryptionKeyAlias6C248240": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/CMK-KMS-Hub",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/KMS-Hub/QM-EncryptionKey/Alias/Resource"
      }
    },
    "QMAccounts3D743F6B": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Description": "List of target Accounts",
        "Name": {
          "Fn::FindInMap": [
            "QuotaMonitorMap",
            "SSMParameters",
            "Accounts"
          ]
        },
        "Type": "StringList",
        "Value": "NOP"
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Accounts/Resource"
      }
    },
    "QMNotificationMutingConfig3B7948BA": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Description": "Muting configuration for services, limits e.g. ec2:L-1216C47A,ec2:Running On-Demand Standard (A, C, D, H, I, M, R, T, Z) instances,dynamodb,logs:*,geo:L-05EFD12D",
        "Name": {
          "Fn::FindInMap": [
            "QuotaMonitorMap",
            "SSMParameters",
            "NotificationMutingConfig"
          ]
        },
        "Type": "StringList",
        "Value": "NOP"
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-NotificationMutingConfig/Resource"
      }
    },
    "QMUtilsLayerQMUtilsLayerLayer80D5D993": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "nodejs18.x"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "quota-monitor-for-aws/v6.3.0/assete8b91b89616aa81e100a9f9ce53981ad5df4ba7439cebca83d5dc68349ed3703.zip"
        },
        "LayerName": "QM-UtilsLayer"
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-UtilsLayer/QM-UtilsLayer-Layer/Resource",
        "aws:asset:path": "asset.e8b91b89616aa81e100a9f9ce53981ad5df4ba7439cebca83d5dc68349ed3703.zip",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Content"
      }
    },
    "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-SNSPublisher/QM-SNSPublisher-SNSTopic/Resource"
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionEventsRule5BDCD4FD": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-SNSPublisherFunction-EventsRule",
        "EventBusName": {
          "Ref": "QMBusFF5C6C0C"
        },
        "EventPattern": {
          "detail": {
            "status": [
              "WARN",
              "ERROR"
            ]
          },
          "detail-type": [
            "Trusted Advisor Check Item Refresh Notification",
            "Service Quotas Utilization Notification"
          ],
          "source": [
            "aws.trustedadvisor",
            "aws-solutions.quota-monitor"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMSNSPublisherFunctionQMSNSPublisherFunctionLambda8BD2DBC1",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-SNSPublisherFunction/QM-SNSPublisherFunction-EventsRule/Resource"
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionEventsRuleAllowEventRulequotamonitorhubnoouQMSNSPublisherFunctionQMSNSPublisherFunctionLambda76203A7F3F46BC24": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QMSNSPublisherFunctionQMSNSPublisherFunctionLambda8BD2DBC1",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "QMSNSPublisherFunctionQMSNSPublisherFunctionEventsRule5BDCD4FD",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-SNSPublisherFunction/QM-SNSPublisherFunction-EventsRule/AllowEventRulequotamonitorhubnoouQMSNSPublisherFunctionQMSNSPublisherFunctionLambda76203A7F"
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-SNSPublisherFunction/QM-SNSPublisherFunction-Lambda-Dead-Letter-Queue/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Queue itself is dead-letter queue",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueuePolicyBA6A8707": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-SNSPublisherFunction/QM-SNSPublisherFunction-Lambda-Dead-Letter-Queue/Policy/Resource"
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleA2F00B10": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-SNSPublisherFunction/QM-SNSPublisherFunction-Lambda/ServiceRole/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "AWSLambdaBasicExecutionRole added by cdk only gives write permissions for CW logs",
              "id": "AwsSolutions-IAM4"
            },
            {
              "reason": "Actions restricted on kms key ARN. Only actions that do not support resource-level permissions have * in resource",
              "id": "AwsSolutions-IAM5"
            },
            {
              "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
              "id": "AwsSolutions-L1"
            }
          ]
        }
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleDefaultPolicy1E6E152C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:CreateGrant"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "SNS:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
              }
            },
            {
              "Action": "kms:GenerateDataKey",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter",
                    {
                      "Ref": "QMNotificationMutingConfig3B7948BA"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleDefaultPolicy1E6E152C",
        "Roles": [
          {
            "Ref": "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleA2F00B10"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-SNSPublisherFunction/QM-SNSPublisherFunction-Lambda/ServiceRole/DefaultPolicy/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "AWSLambdaBasicExecutionRole added by cdk only gives write permissions for CW logs",
              "id": "AwsSolutions-IAM4"
            },
            {
              "reason": "Actions restricted on kms key ARN. Only actions that do not support resource-level permissions have * in resource",
              "id": "AwsSolutions-IAM5"
            },
            {
              "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
              "id": "AwsSolutions-L1"
            }
          ]
        }
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambda8BD2DBC1": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "quota-monitor-for-aws/v6.3.0/assete7a324e67e467d0c22e13b0693ca4efdceb0d53025c7fb45fe524870a5c18046.zip"
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A",
              "Arn"
            ]
          }
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-SNSPublisherFunction-Lambda",
        "Environment": {
          "Variables": {
            "QM_NOTIFICATION_MUTING_CONFIG_PARAMETER": {
              "Ref": "QMNotificationMutingConfig3B7948BA"
            },
            "SOLUTION_UUID": {
              "Fn::GetAtt": [
                "QMHelperCreateUUIDE0D423E6",
                "UUID"
              ]
            },
            "METRICS_ENDPOINT": {
              "Fn::FindInMap": [
                "QuotaMonitorMap",
                "Metrics",
                "MetricsEndpoint"
              ]
            },
            "SEND_METRIC": {
              "Fn::FindInMap": [
                "QuotaMonitorMap",
                "Metrics",
                "SendAnonymizedData"
              ]
            },
            "TOPIC_ARN": {
              "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
            },
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.3.0",
            "VERSION": "v6.3.0",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
          }
        ],
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleA2F00B10",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": {
            "Ref": "SecurityGroupIds"
          },
          "SubnetIds": {
            "Ref": "SubnetIds"
          }
        }
      },
      "DependsOn": [
        "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleDefaultPolicy1E6E152C",
        "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleA2F00B10"
      ],
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-SNSPublisherFunction/QM-SNSPublisherFunction-Lambda/Resource",
        "aws:asset:path": "asset.e7a324e67e467d0c22e13b0693ca4efdceb0d53025c7fb45fe524870a5c18046.zip",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
              "id": "AwsSolutions-L1"
            }
          ]
        }
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaEventInvokeConfig7A963AA0": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "QMSNSPublisherFunctionQMSNSPublisherFunctionLambda8BD2DBC1"
        },
        "MaximumEventAgeInSeconds": 14400,
        "Qualifier": "$LATEST"
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-SNSPublisherFunction/QM-SNSPublisherFunction-Lambda/EventInvokeConfig/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
              "id": "AwsSolutions-L1"
            }
          ]
        }
      }
    },
    "QMEmailSubscription32E71F90": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": {
          "Ref": "SNSEmail"
        },
        "Protocol": "email",
        "TopicArn": {
          "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-EmailSubscription/Resource"
      },
      "Condition": "EmailTrueCondition"
    },
    "QMSummarizerEventQueueQMSummarizerEventQueueEventsRuleE50B8D7C": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-Summarizer-EventQueue-EventsRule",
        "EventBusName": {
          "Ref": "QMBusFF5C6C0C"
        },
        "EventPattern": {
          "detail": {
            "status": [
              "OK",
              "WARN",
              "ERROR"
            ]
          },
          "detail-type": [
            "Trusted Advisor Check Item Refresh Notification",
            "Service Quotas Utilization Notification"
          ],
          "source": [
            "aws.trustedadvisor",
            "aws-solutions.quota-monitor"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Summarizer-EventQueue/QM-Summarizer-EventQueue-EventsRule/Resource"
      }
    },
    "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "VisibilityTimeout": 60
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Summarizer-EventQueue/QM-Summarizer-EventQueue-Queue/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "dlq not implemented on sqs, will evaluate in future if there is need",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "QMSummarizerEventQueueQMSummarizerEventQueueQueuePolicyE7E1F6D8": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Summarizer-EventQueue/QM-Summarizer-EventQueue-Queue/Policy/Resource"
      }
    },
    "QMTable336670B0": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "MessageId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "TimeStamp",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "MessageId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "TimeStamp",
            "KeyType": "RANGE"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "SSESpecification": {
          "KMSMasterKeyId": {
            "Fn::GetAtt": [
              "KMSHubQMEncryptionKeyA80F8C05",
              "Arn"
            ]
          },
          "SSEEnabled": true,
          "SSEType": "KMS"
        },
        "TimeToLiveSpecification": {
          "AttributeName": "ExpiryTime",
          "Enabled": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Table/Resource"
      }
    },
    "QMReporterQMReporterEventsRule0BF77282": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-Reporter-EventsRule",
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMReporterQMReporterLambda7D98A6E4",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Reporter/QM-Reporter-EventsRule/Resource"
      }
    },
    "QMReporterQMReporterEventsRuleAllowEventRulequotamonitorhubnoouQMReporterQMReporterLambda0CE086E3DDFD1F2A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QMReporterQMReporterLambda7D98A6E4",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "QMReporterQMReporterEventsRule0BF77282",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Reporter/QM-Reporter-EventsRule/AllowEventRulequotamonitorhubnoouQMReporterQMReporterLambda0CE086E3"
      }
    },
    "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Reporter/QM-Reporter-Lambda-Dead-Letter-Queue/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Queue itself is dead-letter queue",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "QMReporterQMReporterLambdaDeadLetterQueuePolicyE714847D": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Reporter/QM-Reporter-Lambda-Dead-Letter-Queue/Policy/Resource"
      }
    },
    "QMReporterQMReporterLambdaServiceRoleBA4CED84": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Reporter/QM-Reporter-Lambda/ServiceRole/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "AWSLambdaBasicExecutionRole added by cdk only gives write permissions for CW logs",
              "id": "AwsSolutions-IAM4"
            },
            {
              "reason": "Actions restricted on kms key ARN. Only actions that do not support resource-level permissions have * in resource",
              "id": "AwsSolutions-IAM5"
            },
            {
              "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
              "id": "AwsSolutions-L1"
            }
          ]
        }
      }
    },
    "QMReporterQMReporterLambdaServiceRoleDefaultPolicyC6B87A76": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:CreateGrant"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMTable336670B0",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMReporterQMReporterLambdaServiceRoleDefaultPolicyC6B87A76",
        "Roles": [
          {
            "Ref": "QMReporterQMReporterLambdaServiceRoleBA4CED84"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Reporter/QM-Reporter-Lambda/ServiceRole/DefaultPolicy/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "AWSLambdaBasicExecutionRole added by cdk only gives write permissions for CW logs",
              "id": "AwsSolutions-IAM4"
            },
            {
              "reason": "Actions restricted on kms key ARN. Only actions that do not support resource-level permissions have * in resource",
              "id": "AwsSolutions-IAM5"
            },
            {
              "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
              "id": "AwsSolutions-L1"
            }
          ]
        }
      }
    },
    "QMReporterQMReporterLambda7D98A6E4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "quota-monitor-for-aws/v6.3.0/asseta6fda81c73d731886f04e1734d036f12ceb7b94c2efec30bb511f477ac58aa9c.zip"
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC",
              "Arn"
            ]
          }
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-Reporter-Lambda",
        "Environment": {
          "Variables": {
            "QUOTA_TABLE": {
              "Ref": "QMTable336670B0"
            },
            "SQS_URL": {
              "Ref": "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A"
            },
            "MAX_MESSAGES": "10",
            "MAX_LOOPS": "10",
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.3.0",
            "VERSION": "v6.3.0",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
          }
        ],
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "QMReporterQMReporterLambdaServiceRoleBA4CED84",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 10,
        "VpcConfig": {
          "SecurityGroupIds": {
            "Ref": "SecurityGroupIds"
          },
          "SubnetIds": {
            "Ref": "SubnetIds"
          }
        }
      },
      "DependsOn": [
        "QMReporterQMReporterLambdaServiceRoleDefaultPolicyC6B87A76",
        "QMReporterQMReporterLambdaServiceRoleBA4CED84"
      ],
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Reporter/QM-Reporter-Lambda/Resource",
        "aws:asset:path": "asset.a6fda81c73d731886f04e1734d036f12ceb7b94c2efec30bb511f477ac58aa9c.zip",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
              "id": "AwsSolutions-L1"
            }
          ]
        }
      }
    },
    "QMReporterQMReporterLambdaEventInvokeConfig07548BFA": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "QMReporterQMReporterLambda7D98A6E4"
        },
        "MaximumEventAgeInSeconds": 14400,
        "Qualifier": "$LATEST"
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Reporter/QM-Reporter-Lambda/EventInvokeConfig/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
              "id": "AwsSolutions-L1"
            }
          ]
        }
      }
    },
    "QMDeploymentManagerQMDeploymentManagerEventsRule53DB2DA9": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-Deployment-Manager-EventsRule",
        "EventPattern": {
          "detail-type": [
            "Parameter Store Change"
          ],
          "source": [
            "aws.ssm"
          ],
          "resources": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":ssm:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":parameter",
                  {
                    "Ref": "QMAccounts3D743F6B"
                  }
                ]
              ]
            }
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Deployment-Manager/QM-Deployment-Manager-EventsRule/Resource"
      }
    },
    "QMDeploymentManagerQMDeploymentManagerEventsRuleAllowEventRulequotamonitorhubnoouQMDeploymentManagerQMDeploymentManagerLambda69BB20E9F676A8A9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "QMDeploymentManagerQMDeploymentManagerEventsRule53DB2DA9",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Deployment-Manager/QM-Deployment-Manager-EventsRule/AllowEventRulequotamonitorhubnoouQMDeploymentManagerQMDeploymentManagerLambda69BB20E9"
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Deployment-Manager/QM-Deployment-Manager-Lambda-Dead-Letter-Queue/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "Queue itself is dead-letter queue",
              "id": "AwsSolutions-SQS3"
            }
          ]
        }
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueuePolicy6B59E185": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Deployment-Manager/QM-Deployment-Manager-Lambda-Dead-Letter-Queue/Policy/Resource"
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Deployment-Manager/QM-Deployment-Manager-Lambda/ServiceRole/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "AWSLambdaBasicExecutionRole added by cdk only gives write permissions for CW logs",
              "id": "AwsSolutions-IAM4"
            },
            {
              "reason": "Actions restricted on kms key ARN. Only actions that do not support resource-level permissions have * in resource",
              "id": "AwsSolutions-IAM5"
            },
            {
              "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
              "id": "AwsSolutions-L1"
            }
          ]
        }
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:CreateGrant"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "events:PutPermission",
                "events:RemovePermission"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "events:DescribeEventBus",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMBusFF5C6C0C",
                  "Arn"
                ]
              }
            },
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter",
                    {
                      "Ref": "QMAccounts3D743F6B"
                    }
                  ]
                ]
              }
            },
            {
              "Action": "support:DescribeTrustedAdvisorChecks",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777",
        "Roles": [
          {
            "Ref": "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Deployment-Manager/QM-Deployment-Manager-Lambda/ServiceRole/DefaultPolicy/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "AWSLambdaBasicExecutionRole added by cdk only gives write permissions for CW logs",
              "id": "AwsSolutions-IAM4"
            },
            {
              "reason": "Actions restricted on kms key ARN. Only actions that do not support resource-level permissions have * in resource",
              "id": "AwsSolutions-IAM5"
            },
            {
              "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
              "id": "AwsSolutions-L1"
            }
          ]
        }
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "quota-monitor-for-aws/v6.3.0/asset6a1cf55956fc481a1f22a54b0fa78a3d78b7e61cd41e12bf80ac8c9404ff9eb2.zip"
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2",
              "Arn"
            ]
          }
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-Deployment-Manager-Lambda",
        "Environment": {
          "Variables": {
            "EVENT_BUS_NAME": {
              "Ref": "QMBusFF5C6C0C"
            },
            "EVENT_BUS_ARN": {
              "Fn::GetAtt": [
                "QMBusFF5C6C0C",
                "Arn"
              ]
            },
            "QM_ACCOUNT_PARAMETER": {
              "Ref": "QMAccounts3D743F6B"
            },
            "DEPLOYMENT_MODEL": "Accounts",
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.3.0",
            "VERSION": "v6.3.0",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
          }
        ],
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": {
            "Ref": "SecurityGroupIds"
          },
          "SubnetIds": {
            "Ref": "SubnetIds"
          }
        }
      },
      "DependsOn": [
        "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777",
        "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72"
      ],
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Deployment-Manager/QM-Deployment-Manager-Lambda/Resource",
        "aws:asset:path": "asset.6a1cf55956fc481a1f22a54b0fa78a3d78b7e61cd41e12bf80ac8c9404ff9eb2.zip",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
              "id": "AwsSolutions-L1"
            }
          ]
        }
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaEventInvokeConfig4C3821AB": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21"
        },
        "MaximumEventAgeInSeconds": 14400,
        "Qualifier": "$LATEST"
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/QM-Deployment-Manager/QM-Deployment-Manager-Lambda/EventInvokeConfig/Resource",
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "reason": "GovCloud regions support only up to nodejs 16, risk is tolerable",
              "id": "AwsSolutions-L1"
            }
          ]
        }
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VSwW7bMAz9ltwVNcmA9bqkWIthHZqlxa4BLbOualvSRMmDYfjfR9mO627oxeR7fiL5KO3kdnstu80K/tBa5eW60pnsHgOoUtw8myN4qDGgT+AHOKdNkdIba3IdtDWCz507bNAEkt3XFA+RkmTOT7HCRKTYi7Jm3XdsE5PCvtIw6IekF0R16u+50bvmb2D8ea8pzFwvKqizHGR3Dy36X+gpzcbH/sVH9LWmAd1Go8JEz/kw9TfT2BLZ47MuZitLksf8dAYiZNP7FBjLQ1QlhgMQCvrNJn9GjIPxMRm+R1tp1c7kCHuhgU2f7LSnFN+EFw0ZrvlknVaJHZPHmJHy2l1sLHEv8tZAbXO+zyfIxtpDwrXQN1qhggCVLfhaPRa8T9/KLt2Ec9wSLkX3gReexYB33kb3P8MLsErP8hOSjV7hgu57MWyJn1WRHtBFIlSkYOuznzDJo7eNztOND39m4aJuyh9icDH0YrOGyr2A3Ky+TO/3KsUP7U3ybunwvRke1dgc5StdNdvPcreRu9Urab320QRdozyN8S/UUHtPOAMAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "quota-monitor-hub-no-ou/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "UUID": {
      "Description": "UUID for the deployment",
      "Value": {
        "Fn::GetAtt": [
          "QMHelperCreateUUIDE0D423E6",
          "UUID"
        ]
      }
    },
    "EventBus": {
      "Description": "Event Bus Arn in hub",
      "Value": {
        "Fn::GetAtt": [
          "QMBusFF5C6C0C",
          "Arn"
        ]
      }
    },
    "SNSTopic": {
      "Description": "The SNS Topic where notifications are published to",
      "Value": {
        "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
      }
    }
  }
}